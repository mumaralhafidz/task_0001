/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package xts_aes;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

import java.io.RandomAccessFile;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
import javax.xml.bind.DatatypeConverter;

/**
 *
 * @author Anggi
 */
public class Tampilan extends javax.swing.JFrame {
    
    /**
     * Creates new form Tampilan
     */
    public Tampilan() {
        initComponents();     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        textField1 = new java.awt.TextField();
        textField2 = new java.awt.TextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        textField5 = new java.awt.TextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        textField3 = new java.awt.TextField();
        textField4 = new java.awt.TextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        textField6 = new java.awt.TextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jTextField1.setText("aaaaaa");

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel1.setText("Key");
        jLabel1.setBounds(60, 130, 50, 23);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel3.setText("Plain Text");
        jLabel3.setBounds(20, 60, 120, 16);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton2.setText("Browse File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(810, 120, 140, 40);
        jLayeredPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField1.setEditable(false);
        textField1.setEnabled(false);
        textField1.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField1.setForeground(new java.awt.Color(130, 130, 130));
        textField1.setText("Input the Key");
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        textField1.setBounds(200, 120, 500, 40);
        jLayeredPane1.add(textField1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textField2.setEditable(false);
        textField2.setEnabled(false);
        textField2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField2.setForeground(new java.awt.Color(130, 130, 130));
        textField2.setText("Input the Plaintext");
        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });
        textField2.setBounds(200, 50, 500, 40);
        jLayeredPane1.add(textField2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton3.setText("Encrypt File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(340, 280, 170, 40);
        jLayeredPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton4.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton4.setText("Browse File");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.setBounds(810, 50, 140, 40);
        jLayeredPane1.add(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField5.setEditable(false);
        textField5.setEnabled(false);
        textField5.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField5.setForeground(new java.awt.Color(130, 130, 130));
        textField5.setText("Input the Initialization Vector");
        textField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField5ActionPerformed(evt);
            }
        });
        textField5.setBounds(200, 190, 500, 40);
        jLayeredPane1.add(textField5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel12.setText("vector");
        jLabel12.setBounds(50, 210, 80, 20);
        jLayeredPane1.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel13.setText("Initialization");
        jLabel13.setBounds(10, 190, 170, 20);
        jLayeredPane1.add(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jComboBox1.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Browse File", "12345678901234567890123456789012", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.setBounds(740, 190, 270, 40);
        jLayeredPane1.add(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane2.addTab("Encrypt", jLayeredPane1);

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setText("Cipher text");
        jLabel2.setBounds(20, 60, 140, 16);
        jLayeredPane2.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel4.setText("Key");
        jLabel4.setBounds(60, 130, 50, 16);
        jLayeredPane2.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton5.setText("Browse File");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(810, 120, 140, 40);
        jLayeredPane2.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField3.setEditable(false);
        textField3.setEnabled(false);
        textField3.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField3.setForeground(new java.awt.Color(130, 130, 130));
        textField3.setText("Input the Key");
        textField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        });
        textField3.setBounds(200, 120, 500, 40);
        jLayeredPane2.add(textField3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField4.setEditable(false);
        textField4.setEnabled(false);
        textField4.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField4.setForeground(new java.awt.Color(130, 130, 130));
        textField4.setText("Input the Ciphertext");
        textField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField4ActionPerformed(evt);
            }
        });
        textField4.setBounds(200, 50, 500, 40);
        jLayeredPane2.add(textField4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        textField4.getAccessibleContext().setAccessibleDescription("");

        jButton6.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton6.setText("Decrypt File");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.setBounds(340, 280, 170, 40);
        jLayeredPane2.add(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton7.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jButton7.setText("Browse File");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.setBounds(810, 50, 140, 40);
        jLayeredPane2.add(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel14.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel14.setText("Initialization");
        jLabel14.setBounds(10, 190, 170, 20);
        jLayeredPane2.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel15.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel15.setText("vector");
        jLabel15.setBounds(50, 210, 80, 20);
        jLayeredPane2.add(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textField6.setEditable(false);
        textField6.setEnabled(false);
        textField6.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        textField6.setForeground(new java.awt.Color(130, 130, 130));
        textField6.setText("Input the Initialization Vector");
        textField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField6ActionPerformed(evt);
            }
        });
        textField6.setBounds(200, 190, 500, 40);
        jLayeredPane2.add(textField6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jComboBox2.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Browse File", "12345678901234567890123456789012", "Item 4" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.setBounds(740, 190, 270, 40);
        jLayeredPane2.add(jComboBox2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane2.addTab("Decrypt", jLayeredPane2);

        jLabel5.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 36)); // NOI18N
        jLabel5.setText("XTS-AES ");

        jLabel6.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel6.setText("XEX (XOR-Encrypt-XOR) Tweakable Block Cipher with Ciphertext Stealing");

        jLabel7.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel7.setText("Mochammad Umar Al Hafidz");

        jLabel8.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel8.setText("Tugas Proyek Pemograman 1 CIS Kelompok 29 :");

        jLabel9.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel9.setText("Keumala Anggraini");

        jLabel10.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel10.setText("- (1606964710)");

        jLabel11.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 18)); // NOI18N
        jLabel11.setText("- (1606964673)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel8)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1032, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel5))
                    .addComponent(jLabel6))
                .addGap(224, 224, 224))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(8, 8, 8)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // inisilisasi File Chooser        
    JFileChooser pilih = new JFileChooser();
    // inisialisasi size block
    int block_size = 16;
    
    int byte_size;
    
    byte[][] multiplyAlpha;
    
    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // membuka direktori
        pilih.showOpenDialog(null);
        // memilih file
        File plain = pilih.getSelectedFile();
        // nama file yang dipilih beserta direktori nya
        String namaFilePlain = plain.getAbsolutePath();
        // menampilkan direktori dan file yang di pilih dalam berbentuk tulisan di textfile
        textField2.setText(namaFilePlain);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // membuka direktori
        pilih.showOpenDialog(null);
        // memilih file
        File keyPlain = pilih.getSelectedFile();
        // nama file yang dipilih beserta direktori nya
        String namaKeyPlain = keyPlain.getAbsolutePath();
        // menampilkan direktori dan file yang di pilih dalam berbentuk tulisan di textfile
        textField1.setText(namaKeyPlain);             
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        // membuka direktori
        pilih.showOpenDialog(null);
        // memilih file
        File keycipher = pilih.getSelectedFile();
        // nama file yang dipilih beserta direktori nya
        String namaFileKeyCipher = keycipher.getAbsolutePath();
        // menampilkan direktori dan file yang di pilih dalam berbentuk tulisan di textfile
        textField3.setText(namaFileKeyCipher);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField3ActionPerformed

    private void textField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        // membuka direktori
        pilih.showOpenDialog(null);
        // memilih file
        File cipher = pilih.getSelectedFile();
        // nama file yang dipilih beserta direktori nya
        String namaFileCipher = cipher.getAbsolutePath();
        // menampilkan direktori dan file yang di pilih dalam berbentuk tulisan di textfile
        textField4.setText(namaFileCipher);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void textField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // inisialisasi panjang key
        int key_length = 32;
        // mengambil nilai key untuk plaintext
        String keyPlain = textField1.getText();
                
        if(keyPlain.length() != 32){
            JOptionPane.showMessageDialog(null, "Key must be 256 bits");
        }
        else {
            // membagi dua key menjadi key1 dan key2
            String namakeyPlain1 = keyPlain.substring(0, key_length / 2);
            String namakeyPlain2 = keyPlain.substring(key_length / 2);
        
            // convert string to bytes
            byte[] keyPlain1 = Konversi.hexStringToByteArray(namakeyPlain1);
            byte[] keyPlain2 = Konversi.hexStringToByteArray(namakeyPlain2);
            
            AES aes = new AES(keyPlain2);
            String z = textField5.getText();
            byte[] iv = Konversi.hexStringToByteArray(z);
            try {
                multiplyAlpha(aes.encrypt(iv));
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            try {
                // mengambil input
                String plain = textField2.getText();
                RandomAccessFile randAccIn = new RandomAccessFile(plain, "r");
                
                // menghitung panjang file input
                long input_length = randAccIn.length();
                
                // menghitung byte size
                int byte_size = (int) (input_length / block_size);
                int end_block = (int) (input_length % block_size);
                
                //
                byte[][] in = new byte[byte_size + 1][block_size];
                in[byte_size] = new byte[end_block];
                
                //
                byte[][] out = new byte[byte_size + 1][block_size];
                out[byte_size] = new byte[end_block];
                
                //
                for(int a = 0; a < in.length; a++){
                    randAccIn.read(in[a]);
                }
                
                //
                for(int x = 0; x <= byte_size - 2; x++){
                    out[x] = enkripBlok(keyPlain1, keyPlain2, in[x], x);
                }
                
                // Jika tidak ada proses stealing
                if(end_block == 0){
                    out[byte_size - 1] = enkripBlok(keyPlain1, keyPlain2, in[byte_size - 1], byte_size - 1);
                    out[byte_size] = new byte[0];
                }
                
                // Jika terjadi stealing
                else{
                    byte[] cc = enkripBlok(keyPlain1, keyPlain2, in[byte_size - 1], byte_size - 1);
                    System.arraycopy(cc, 0, out[byte_size], 0, end_block);
                    byte[] cp = new byte[block_size - end_block];
                    for(int y = end_block; y < block_size; y++){
                        cp[y - end_block] = cc[y];
                    }
                    byte[] pp = new byte[in[byte_size].length + cp.length];
                    System.arraycopy(in[byte_size], 0, pp, 0, in[byte_size].length);
                    System.arraycopy(cp, 0, pp, 0, in[byte_size].length);
                }
                randAccIn.close();
                
                // informasi tentang telah selesai melakukan enkripsi
                int response = JOptionPane.showConfirmDialog(null, "Encrypt Done !!", "", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE);
                
                // menyimpan file output
                if(response == JOptionPane.OK_OPTION){
                    String cipher = textField2.getText();
                    RandomAccessFile randAccOut = new RandomAccessFile(cipher, "rw");
                    for(int p = 0; p < out.length; p++){
                        for(int q = 0; q < out[p].length; q++){
                            randAccOut.write(out[p][q]);
                        }
                        randAccOut.close();
                    }
                }
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void textField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem()=="Browse File"){
            // membuka direktori
            pilih.showOpenDialog(null);
            // memilih file
            File ivPlain = pilih.getSelectedFile();
            // nama file yang dipilih beserta direktori nya
            String namaIVPlain = ivPlain.getAbsolutePath();
            System.out.println(namaIVPlain);
                        
            File file = new File(namaIVPlain);
            try {
                // using bufferedreader file
                BufferedReader br = new BufferedReader(new FileReader(file));
                // baca isi file
                String iv = br.readLine();
                
                textField5.setText(iv);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tampilan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(jComboBox1.getSelectedItem()=="12345678901234567890123456789012"){
            String iv = "12345678901234567890123456789012";
            byte[] byteIVPlain = Konversi.hexStringToByteArray(iv);
            textField5.setText(iv);
        } 
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox2.getSelectedItem()=="Browse File"){
            //membuka direktori
            pilih.showOpenDialog(null);
            // memilih file
            File ivCipher = pilih.getSelectedFile();
            // nama file yang dipilih beserta direktorinya
            String namaIVCipher = ivCipher.getAbsolutePath();
            // menampilkan direktori dan file yang dipilih dalam bentuk tulisan di textfield
            textField6.setText(namaIVCipher);
        }
        else if(jComboBox2.getSelectedItem()=="12345678901234567890123456789012"){
            String iv1 = "12345678901234567890123456789012";
            textField6.setText(iv1);
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tampilan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tampilan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tampilan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tampilan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tampilan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    private java.awt.TextField textField5;
    private java.awt.TextField textField6;
    // End of variables declaration//GEN-END:variables

    private byte[] enkripBlok(byte[] key1, byte[] key2, byte[] b, int x) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
        AES aes= new AES(key2);
        byte[] t = multiplyAlpha[x];
	byte[] pp = xortweaktext(t, b); 
	aes= new AES(key1);
	byte[] cc = aes.encrypt(pp);
	byte[] c = xortweaktext(t, cc);  
		
	return c;
    }
    
    public void multiplyAlpha(byte[] tweakEncrypt) {
        byte[][] multiplyDP = new byte[byte_size + 1][block_size];
        multiplyDP[0] = tweakEncrypt;
        for (int i = 1; i < byte_size + 1; i++) {
            multiplyDP[i][0] = (byte) ((2 * (multiplyDP[i-1][0] % 128)) ^ (135 * (multiplyDP[i-1][15] / 128)));
            for (int k = 1; k < 16; k++) {
                multiplyDP[i][k] = (byte) ((2 * (multiplyDP[i-1][k] % 128)) ^ (multiplyDP[i-1][k - 1] / 128));
            }
        }
        this.multiplyAlpha =  multiplyDP;
    }
    
    public byte[] xortweaktext (byte[] tweakEncrypt, byte[] textBlock){
    	byte[] result = new byte[16];
    	for(int i=0; i<tweakEncrypt.length; i++){
    		result[i] = (byte)(tweakEncrypt[i]^textBlock[i]);
    	}
    	return result;
    }
}




class AES {
	
	private String Key;

	//Constructor, masukan key untuk AES
	public AES(byte[] key) {
		this.Key = Konversi.hexStringToByteArray(key);
	}
	
	/*
	 * method enkripsi dengan AES java library
	 * @return byte[] hasil enkripsi
	 */
	public byte[] encrypt(byte[] textHex)throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
		SecretKey key = new SecretKeySpec(DatatypeConverter.parseHexBinary(Key), "AES");
			
		Cipher cipher = Cipher.getInstance("AES/ECB/NoPadding");
		cipher.init(Cipher.ENCRYPT_MODE, key);
			
		byte[] result = cipher.doFinal(DatatypeConverter.parseHexBinary(Konversi.byteArrayTohexString(textHex)));
			
		return result;
	}
	
	/*
	 * method dekripsi dengan AES java library
	 * @return byte[] hasil dekripsi
	 */
	public byte[] decrypt(byte[] textHex)throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
		
		SecretKey key = new SecretKeySpec(DatatypeConverter.parseHexBinary(Key), "AES");
			
		Cipher cipher = Cipher.getInstance("AES/ECB/NoPadding");
		cipher.init(Cipher.DECRYPT_MODE, key);
			
		byte[] result = cipher.doFinal(DatatypeConverter.parseHexBinary(Konversi.byteArrayTohexString(textHex)));
			
		return result;
	}

}
